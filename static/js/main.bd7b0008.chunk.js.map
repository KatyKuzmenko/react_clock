{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","clockTimer","state","time","Date","this","window","setInterval","setState","console","log","toLocaleTimeString","name","props","clearInterval","React","Component","App","clockName","isClockVisible","className","type","onClick","Math","round","random","ReactDOM","render","document","getElementById"],"mappings":"sNAQaA,EAAb,4MACSC,gBADT,IAGEC,MAAoB,CAClBC,KAAM,IAAIC,MAJd,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,WAAaK,OAAOC,aAAY,WACnC,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAZP,gCAeE,YAA0C,IAArBC,EAAoB,EAApBA,KACfA,IAASP,KAAKQ,MAAMD,MAEtBH,QAAQC,IAAR,qCAA0CE,EAA1C,eAAqDP,KAAKQ,MAAMD,SAlBtE,kCAsBE,WACEE,cAAcT,KAAKJ,cAvBvB,oBA0BE,WACE,IAAQE,EAASE,KAAKH,MAAdC,KAER,OACE,oDACoBA,EAAKQ,4BA/B/B,GAA2BI,IAAMC,WCG3BC,E,4MACJf,MAAQ,CACNgB,UAAW,EACXC,gBAAgB,G,4CAGlB,WAAU,IAAD,OACP,EAAsCd,KAAKH,MAAnCgB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,eAEnB,OACE,sBAAKC,UAAU,MAAf,UACE,6CAEA,qBAAKA,UAAU,iBAAf,SACGD,GACE,cAAC,EAAD,CAAOP,KAAMM,MAGlB,wBACEE,UAAU,SACVC,KAAK,SACLC,QAAS,WACP,EAAKd,SAAS,CAAEW,gBAAgB,KAJpC,wBAUA,wBACEC,UAAU,SACVC,KAAK,SACLC,QAAS,WACP,EAAKd,SAAS,CAAEW,gBAAgB,KAJpC,wBAUA,wBACEC,UAAU,SACVC,KAAK,SACLC,QAAS,WACP,EAAKd,SAAS,CAAEU,UAAWK,KAAKC,MAAsB,IAAhBD,KAAKE,aAJ/C,oC,GAtCUV,IAAMC,WAoDTC,IC5DfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bd7b0008.chunk.js","sourcesContent":["import React from 'react';\n\ntype ClockState = {\n  time: Date;\n};\ntype ClockProps = {\n  name: number;\n};\nexport class Clock extends React.Component<ClockProps, ClockState> {\n  public clockTimer?: number;\n\n  state: ClockState = {\n    time: new Date(),\n  };\n\n  componentDidMount() {\n    this.clockTimer = window.setInterval(() => {\n      this.setState({ time: new Date() });\n      // eslint-disable-next-line\n      console.log(this.state.time.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate({ name }: ClockProps) {\n    if (name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clockTimer);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <p>\n        {`Current time: ${time.toLocaleTimeString()}`}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype Props = {};\n\nexport type State = {\n  clockName: number;\n  isClockVisible: boolean;\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    clockName: 0,\n    isClockVisible: true,\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <div className=\"time-container\">\n          {isClockVisible\n          && <Clock name={clockName} />}\n        </div>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n        >\n          Show Clock\n        </button>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: Math.round(Math.random() * 1000) });\n          }}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}